# -*- coding: utf-8 -*-
"""Test

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14og9Upmm-3QbOI9GHPaJi6xresZVD6U_
"""

from sklearn.linear_model import LinearRegression
import numpy as np
import matplotlib.pyplot as plt

# Example training data: size of house (in square feet) and price (in thousands)
# Let's assume we have this data
house_size = np.array([500, 800, 1000, 1500, 2000, 2500, 3000, 3500]).reshape(-1, 1) #reshape converts 1d array into 2D array
house_price = np.array([150, 230, 300, 400, 500, 600, 700, 800])

# Initialize the Linear Regression model
model = LinearRegression()

# Train the model using the training data
model.fit(house_size, house_price)

# Predict prices for new house sizes (e.g., 1200, 2200, 2800 sq ft)
new_house_size = np.array([1200, 2200, 2800]).reshape(-1, 1)
predicted_price = model.predict(new_house_size)

# Print the predicted prices for new house sizes
for size, price in zip(new_house_size.flatten(), predicted_price):
    print(f"Predicted price for a house of size {size} sq ft: ${price*1000:.2f}")

# Plot the data and the model
plt.scatter(house_size, house_price, color='blue', label='Training data')
plt.plot(house_size, model.predict(house_size), color='red', label='Linear model')
plt.scatter(new_house_size, predicted_price, color='green', label='Predictions', marker='x')
plt.xlabel('Size of house (sq ft)')
plt.ylabel('Price (in thousands of $)')
plt.legend()
plt.show()